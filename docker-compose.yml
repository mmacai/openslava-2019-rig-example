version: "3"
services:
  zk:
    image: confluentinc/cp-zookeeper:5.0.0
    container_name: zk
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: on-failure:5

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 4
    restart: on-failure:5

  reactive-interaction-gateway:
    container_name: reactive-interaction-gateway
    image: accenture/reactive-interaction-gateway
    environment:
      - LOG_LEVEL=debug
      - KAFKA_SOURCE_TOPICS=openslava
      - PROXY_KAFKA_REQUEST_TOPIC=openslava
      - PROXY_KAFKA_RESPONSE_TOPICS=openslava
      - KAFKA_BROKERS=kafka:9092
      - PROXY_CONFIG_FILE=/rig-proxy.json
      - RS_HOST=registration-service
      - KAFKA_HOST=kafka
      - EXTRACTORS={"com.openslava.registration.confirmed":{"name":{"stable_field_index":0,"event":{"json_pointer":"/data/name"}}},"com.openslava.mentor.assigned":{"name":{"stable_field_index":0,"event":{"json_pointer":"/data/attendeeName"}}}}
    ports:
      - 4000:4000
      - 4010:4010
    volumes:
      - ./rig-proxy.json:/rig-proxy.json
    restart: on-failure:5

  registration-service:
    container_name: registration-service
    build:
      context: ./registration-service
    ports:
      - 5000:5000
    environment:
      KAFKA_BROKERS: kafka:9092
    volumes:
      - ./registration-service/src:/home/node/src
      - ./registration-service/index.js:/home/node/index.js
    command: yarn start:watch
    restart: on-failure:5

  mentor-matching-service:
    container_name: mentor-matching-service
    build:
      context: ./mentor-matching-service
    environment:
      KAFKA_BROKERS: kafka:9092
    volumes:
      - ./mentor-matching-service/src:/home/node/src
      - ./mentor-matching-service/index.js:/home/node/index.js
    command: yarn start:watch
    restart: on-failure:5

  notification-service:
    container_name: notification-service
    build:
      context: ./notification-service
    environment:
      KAFKA_BROKERS: kafka:9092
    volumes:
      - ./notification-service/src:/home/node/src
      - ./notification-service/index.js:/home/node/index.js
    command: yarn start:watch
    restart: on-failure:5

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - 9000:80
    restart: on-failure:5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: on-failure:5

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./rig-grafana.json:/var/lib/grafana/dashboards/rig-grafana.json
    links:
      - prometheus
    restart: on-failure:5
